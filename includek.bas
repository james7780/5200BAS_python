DEFLNG A-Z
CONST FALSE = 0, TRUE = NOT FALSE
DECLARE SUB ATASCII (A$)
DECLARE FUNCTION BACKSLASH$ (TEXT$)
DECLARE SUB BRANCH (MINUS, VAR1$, SIGN$, VAR2$, DEST$, VAR2TYPE$, COMM$)
DECLARE FUNCTION BYTE$ (A$)
DECLARE SUB CMD.ATTRACT ()
DECLARE SUB CMD.AUTHOR ()
DECLARE SUB CMD.CASE (MINUS)
DECLARE SUB CMD.CHARSET ()
DECLARE SUB CMD.CLS ()
DECLARE SUB CMD.DATA ()
DECLARE SUB CMD.DEFINE ()
DECLARE SUB CMD.DIV8 ()
DECLARE SUB CMD.DIV16 ()
DECLARE SUB CMD.DIVIDE8 ()
DECLARE SUB CMD.DIVIDE16 ()
DECLARE SUB CMD.DLIST ()
DECLARE SUB CMD.DO (MINUS)
DECLARE SUB CMD.DOWN ()
DECLARE SUB CMD.ELSE ()
DECLARE SUB CMD.END ()
DECLARE SUB CMD.EXIT ()
DECLARE SUB CMD.FOR (MINUS)
DECLARE SUB CMD.GOSUB ()
DECLARE SUB CMD.GOTO ()
DECLARE SUB CMD.IF (MINUS)
DECLARE SUB CMD.INPUT ()
DECLARE SUB CMD.INTERNAL ()
DECLARE SUB CMD.KEYPAD ()
DECLARE SUB CMD.LEFT ()
DECLARE SUB CMD.LOCATE ()
DECLARE SUB CMD.LOOP (MINUS)
DECLARE SUB CMD.MEMAREA ()
DECLARE SUB CMD.MEMCOPY ()
DECLARE SUB CMD.MISSILES ()
DECLARE SUB CMD.MUL8 ()
DECLARE SUB CMD.MULADD ()
DECLARE SUB CMD.MOVEUP ()
DECLARE SUB CMD.NEXT ()
DECLARE SUB CMD.OPTIONS ()
DECLARE SUB CMD.PALETTE ()
DECLARE SUB CMD.POKE ()
DECLARE SUB CMD.POP ()
DECLARE SUB CMD.POS ()
DECLARE SUB CMD.PRINT ()
DECLARE SUB CMD.PUSH ()
DECLARE SUB CMD.PUT ()
DECLARE SUB CMD.RETURN ()
DECLARE SUB CMD.RIGHT ()
DECLARE SUB CMD.RIGHTBRACE ()
DECLARE SUB CMD.SCREEN ()
DECLARE SUB CMD.SELECT ()
DECLARE SUB CMD.SET ()
DECLARE SUB CMD.SOUND ()
DECLARE SUB CMD.SPRITES ()
DECLARE SUB CMD.SUB ()
DECLARE SUB CMD.TITLE ()
DECLARE SUB CMD.UP ()
DECLARE SUB CMD.VOLUME ()
DECLARE FUNCTION COMMENT$ (N)
DECLARE SUB CONSCOLOR (C)
DECLARE FUNCTION DEC (H$)
DECLARE SUB ERROROUT (E$)
DECLARE SUB FCN.INKEY ()
DECLARE SUB FCN.JOYTRIG ()
DECLARE SUB FCN.JOYTRIG2 ()
DECLARE SUB FCN.JOYX ()
DECLARE SUB FCN.JOYY ()
DECLARE SUB FCN.PEEK ()
DECLARE SUB FCN.SCREEN ()
DECLARE FUNCTION FINDTOKEN (TEXT$, START)
DECLARE SUB FIXSTR (A$)
DECLARE FUNCTION HEX2$ (DECIMAL)
DECLARE FUNCTION HEX4$ (DECIMAL)
DECLARE SUB INCLUDES (INCLUDE$, OPTIONS$(), DASM, JUSTINC)
DECLARE FUNCTION INVERTSIGN$ (SIGN$)
DECLARE SUB J5 (W$)
DECLARE SUB LDX (W$)
DECLARE FUNCTION PARAM$ (MODE, LINE$)
DECLARE FUNCTION PARSE$ (S$)
DECLARE SUB PRINTASC (S$)
DECLARE SUB PRINTOUT (OPCODE$, OPERANDS$)
DECLARE SUB STX (W$)
DECLARE SUB TOHEX (A$)

FUNCTION BACKSLASH$ (TEXT$)
  A$ = TEXT$: B = 1
  DO
    B = INSTR(B, A$, "\")
    IF B = 0 THEN EXIT DO
    A$ = MID$(A$, 1, B) + "\" + MID$(A$, B + 1)
    B = B + 2
  LOOP
  BACKSLASH$ = A$
END FUNCTION

SUB INCLUDES (INCLUDE$, OPTIONS$(), DASM, JUSTINC)
IF JUSTINC <> 0 THEN
  SELECT CASE JUSTINC
  CASE 1
    FILENAME$ = "Y2K"
  CASE 2
    FILENAME$ = "CLEARRAM"
  CASE 3
    FILENAME$ = "DEFERVBI"
  CASE 4
    FILENAME$ = "KEYPAD"
  CASE 5
    FILENAME$ = "JOYSTICK"
  END SELECT
  GOSUB INCLUDEF
  EXIT SUB
END IF
DO
  T = INSTR(1, INCLUDE$, "*"): IF T = 0 THEN EXIT DO
  'Dependency Tree
  '---------------
  '1
  '2
  '3
  '4
  '5
  '6
  '7
  '8
  'ÀÄ3
  '9
  'ÀÄ4
  '10
  '11
  '12
  'ÃÄ14
  '³ ÀÄ10
  'ÀÄ11
  '13
  'ÃÄ14
  '³ ÀÄ10
  'ÃÄ6
  'ÀÄ12
  '  ÃÄ14
  '  ³ ÀÄ10
  '  ÀÄ11
  '14
  'ÀÄ10
  '15
  '16
  '17
  '18
  '19
  '20
  '21
  '22
  '23
  SELECT CASE T
  CASE 1
    FILENAME$ = "CLS": GOSUB INCLUDEF
  CASE 2
    FILENAME$ = "PRINT": GOSUB INCLUDEF
  CASE 3
    FILENAME$ = "RIGHT": GOSUB INCLUDEF
  CASE 4
    FILENAME$ = "LEFT": GOSUB INCLUDEF
  CASE 5
    FILENAME$ = "INPUT": GOSUB INCLUDEF
  CASE 6
    FILENAME$ = "MULADD": GOSUB INCLUDEF
  CASE 7
    FILENAME$ = "DIV8": GOSUB INCLUDEF
  CASE 8
    FILENAME$ = "DOWN": GOSUB INCLUDEF
    IF MID$(INCLUDE$, 3, 1) = " " THEN MID$(INCLUDE$, 3, 1) = "*"
  CASE 9
    IF MID$(INCLUDE$, 4, 1) = " " THEN MID$(INCLUDE$, 4, 1) = "*"
    FILENAME$ = "UP": GOSUB INCLUDEF
  CASE 10
    FILENAME$ = "MUL8": GOSUB INCLUDEF
  CASE 11
    FILENAME$ = "MOVEUP": GOSUB INCLUDEF
  CASE 12
    IF MID$(INCLUDE$, 14, 1) = " " THEN MID$(INCLUDE$, 14, 1) = "*"
    IF MID$(INCLUDE$, 11, 1) = " " THEN MID$(INCLUDE$, 11, 1) = "*"
    FILENAME$ = "CHKROW": GOSUB INCLUDEF
  CASE 13
    IF MID$(INCLUDE$, 14, 1) = " " THEN MID$(INCLUDE$, 14, 1) = "*"
    IF MID$(INCLUDE$, 6, 1) = " " THEN MID$(INCLUDE$, 6, 1) = "*"
    IF MID$(INCLUDE$, 12, 1) = " " THEN MID$(INCLUDE$, 12, 1) = "*"
    FILENAME$ = "CRLF": GOSUB INCLUDEF
  CASE 14
    IF MID$(INCLUDE$, 18, 1) = " " THEN MID$(INCLUDE$, 18, 1) = "*"
    FILENAME$ = "POS": GOSUB INCLUDEF
  CASE 15
    FILENAME$ = "MEMCOPY": GOSUB INCLUDEF
  CASE 16
    FILENAME$ = "MEMAREA": GOSUB INCLUDEF
  CASE 17
    FILENAME$ = "PUTSPR": GOSUB INCLUDEF
  CASE 18
    FILENAME$ = "DIV16": GOSUB INCLUDEF
  CASE 19
    FILENAME$ = "PUTMSL": GOSUB INCLUDEF
  CASE 20
    FILENAME$ = "PUTMSH": GOSUB INCLUDEF
  CASE 21
    FILENAME$ = "PUTSPH": GOSUB INCLUDEF
  CASE 22
    FILENAME$ = "PUTMSI": GOSUB INCLUDEF
  CASE 23
    FILENAME$ = "PUTSPI": GOSUB INCLUDEF
  END SELECT
  MID$(INCLUDE$, T, 1) = "x"
LOOP
EXIT SUB

INCLUDEF:
  OPEN "INC\" + FILENAME$ + ".INC" FOR INPUT AS #4
  DO UNTIL EOF(4)
    LINE INPUT #4, A$
    A = INSTR(A$, "~")
    IF A = 0 THEN
      PRINT #2, A$
    ELSE
      B = INSTR(A + 1, A$, "~")
      E$ = MID$(A$, A + 1, B - A)
      E = 1
      DO
        SELECT CASE MID$(E$, E, 1)
        CASE "A"                'PRINT A (OR NOT)
          IF DASM = FALSE THEN S$ = "A" ELSE S$ = ""
          EXIT DO
        CASE "O"                'TEXT$=OPTIONS$(#)
          GOSUB GETNUM
          S$ = OPTIONS$(N, 0)
        CASE "D"                'NUMBER=DEC(TEXT$)
          S = DEC(S$): E = E + 1
        CASE "H"                'TEXT$=HEX4$(NUMBER)
          S$ = HEX4$(S): E = E + 1
        CASE "<"                'TEXT$=HIGH BYTE(TEXT$)
          S$ = MID$(S$, 1, 2): E = E + 1
        CASE ">"                'TEXT$=LOW BYTE(TEXT$)
          S$ = MID$(S$, 3, 2): E = E + 1
        CASE "+"                'NUMBER=NUMBER+#
          GOSUB GETNUM: S = S + N
        CASE "-"                'NUMBER=NUMBER-#
          GOSUB GETNUM: S = S - N
        CASE "~"
          EXIT DO
        CASE ELSE
          PRINT #3, ""
          PRINT #3, "Invalid include expression in INC\"; FILENAME$; ".INC"
          END
        END SELECT
      LOOP
      PRINT #2, MID$(A$, 1, A - 1); S$; MID$(A$, B + 1)
    END IF
  LOOP
  CLOSE #4
RETURN

GETNUM:
  N = 0
  DO
    E = E + 1
    IF INSTR("0123456789", MID$(E$, E, 1)) = 0 THEN EXIT DO
    N = 10 * N + VAL(MID$(E$, E, 1))
  LOOP
RETURN
END SUB

